<?php
require_once __DIR__ . '/inc/header.php';

/*
  Not: Kademeli seçimler (Bina -> Kat -> Birim -> Oda) için odalar.php'deki AJAX uçları kullanıldı:
    - yonetim/ajax_katlar.php?bina_id=...
    - yonetim/ajax_birimler.php?kat_id=...
    - yonetim/ajax_odalar.php?bina_id=...&kat_id=...&birim_id=...
  Personel arama için de ayrı uç: yonetim/ajax_personel.php?q=...
*/

/* Kolon var mı? (gorevler) */
function gorevler_has(string $col): bool {
    static $cache = [];
    if (array_key_exists($col, $cache)) return $cache[$col];
    $row = fetch_one("SHOW COLUMNS FROM gorevler LIKE ?", [$col]);
    $cache[$col] = $row ? true : false;
    return $cache[$col];
}

// Yeni görev ekleme
if (is_post() && ($_POST['act'] ?? '') === 'ekle') {
    csrf_check();
    $baslik       = trim($_POST['baslik'] ?? '');
    $bina_id      = (int)($_POST['bina_id'] ?? 0);
    $kat_id       = (int)($_POST['kat_id'] ?? 0);
    $birim_id     = (int)($_POST['birim_id'] ?? 0) ?: null;
    $oda_id       = (int)($_POST['oda_id'] ?? 0);
    $assigned_id  = (int)($_POST['assigned_user_id'] ?? 0) ?: null;
    $durum        = trim($_POST['durum'] ?? 'YENI');

    if ($baslik === '' || $bina_id === 0 || $kat_id === 0 || $oda_id === 0) {
        flash_set('error', 'Zorunlu alanlar eksik: Başlık, Bina, Kat, Oda');
        redirect(current_path());
    }

    // Dinamik INSERT: olmayan kolonlara referans vermeyelim (created_at/updated_at olmayabilir)
    $cols = [];
    $ph   = [];
    $vals = [];

    if (gorevler_has('baslik')) { $cols[]='baslik'; $ph[]='?'; $vals[]=$baslik; }
    if (gorevler_has('durum'))  { $cols[]='durum';  $ph[]='?'; $vals[]=$durum; }

    if (gorevler_has('bina_id'))  { $cols[]='bina_id';  $ph[]='?'; $vals[]=$bina_id; }
    if (gorevler_has('kat_id'))   { $cols[]='kat_id';   $ph[]='?'; $vals[]=$kat_id; }
    if (gorevler_has('birim_id')) { $cols[]='birim_id'; $ph[]='?'; $vals[]=$birim_id; }
    if (gorevler_has('oda_id'))   { $cols[]='oda_id';   $ph[]='?'; $vals[]=$oda_id; }

    if (gorevler_has('assigned_user_id')) { $cols[]='assigned_user_id'; $ph[]='?'; $vals[]=$assigned_id; }

    if (gorevler_has('created_at')) { $cols[]='created_at'; $ph[]='NOW()'; }
    if (gorevler_has('updated_at')) { $cols[]='updated_at'; $ph[]='NOW()'; }

    if (empty($cols)) {
        flash_set('error','Görev oluşturulamadı (uyumlu kolon bulunamadı).');
        redirect(current_path());
    }

    // NOW() olmayan placeholderlar için bind değerleri oluştur
    $sqlPh = [];
    $bind  = [];
    $vi    = 0;
    foreach ($ph as $p) {
        if ($p === 'NOW()') {
            $sqlPh[] = 'NOW()';
        } else {
            $sqlPh[] = '?';
            $bind[]  = $vals[$vi++];
        }
    }

    $sql = "INSERT INTO gorevler (".implode(',', $cols).") VALUES (".implode(',', $sqlPh).")";
    $ok = exec_stmt($sql, $bind);

    if ($ok) {
        flash_set('success','Görev oluşturuldu.');
    } else {
        flash_set('error','Görev oluşturulamadı.');
    }
    redirect(current_path());
}

// Durum güncelle (liste içinden)
if (is_post() && ($_POST['act'] ?? '') === 'durum_guncelle') {
    csrf_check();
    $gid   = (int)($_POST['id'] ?? 0);
    $durum = trim($_POST['durum'] ?? '');
    if ($gid > 0 && $durum !== '') {
        $set = ['durum=?'];
        $prm = [$durum];
        if (gorevler_has('updated_at')) {
            $set[] = 'updated_at=NOW()';
        }
        $prm[] = $gid;
        $ok = exec_stmt("UPDATE gorevler SET ".implode(', ',$set)." WHERE id=?", $prm);
        if ($ok) flash_set('success','Durum güncellendi.');
        else flash_set('error','Durum güncellenemedi.');
    } else {
        flash_set('error','Eksik bilgi.');
    }
    redirect(current_path());
}

// Liste: Arama + Sıralama
$q = trim($_GET['q'] ?? '');
$params = [];
$where  = " WHERE 1=1 ";
if ($q !== '') {
    $where .= " AND (g.baslik LIKE ? OR u.ad LIKE ? OR b.ad LIKE ? OR k.ad LIKE ? OR bi.ad LIKE ? OR o.ad LIKE ?) ";
    $like = "%$q%";
    $params = [$like,$like,$like,$like,$like,$like];
}

// Sıralama (ID ve Durum)
$sort = strtolower(trim($_GET['sort'] ?? 'id'));
$dir  = strtoupper(trim($_GET['dir'] ?? 'DESC'));
$dir  = in_array($dir, ['ASC','DESC'], true) ? $dir : 'DESC';
$sortMap = [
    'id'    => 'g.id',
    'durum' => 'g.durum',
];
$order = ($sortMap[$sort] ?? 'g.id') . ' ' . $dir . ', g.id DESC';

// Verileri çek
$rows = fetch_all("
  SELECT
    g.id, g.baslik, g.durum, g.assigned_user_id,
    g.bina_id, g.kat_id, g.birim_id, g.oda_id,
    g.sikayet_id,
    b.ad  AS bina_ad,
    k.ad  AS kat_ad,
    bi.ad AS birim_ad,
    o.ad  AS oda_ad,
    u.ad  AS atanan_ad,
    u.telefon AS atanan_tel
  FROM gorevler g
  LEFT JOIN binalar  b  ON b.id  = g.bina_id
  LEFT JOIN katlar   k  ON k.id  = g.kat_id
  LEFT JOIN birimler bi ON bi.id = g.birim_id
  LEFT JOIN odalar   o  ON o.id  = g.oda_id
  LEFT JOIN kullanicilar u ON u.id = g.assigned_user_id
  $where
  ORDER BY $order
", $params);

// Yardımcılar
function sort_link(string $field): string {
    $curSort = strtolower($_GET['sort'] ?? 'id');
    $curDir  = strtoupper($_GET['dir'] ?? 'DESC');
    $nextDir = ($curSort === strtolower($field) && $curDir === 'ASC') ? 'DESC' : 'ASC';
    $qs = array_merge($_GET, ['sort'=>$field, 'dir'=>$nextDir]);
    return '?' . http_build_query($qs);
}

// Bina listesi (yeni görev formu için)
$binalar = fetch_all("SELECT id, ad FROM binalar ORDER BY ad", []);
$durumOptions = ['YENI','ATANDI','DEVAM','BEKLEME','TAMAM'];

?>
<div class="row">
  <div class="col-12">
    <div class="card card-outline card-info">
      <div class="card-header">
        <h3 class="card-title mb-0">Görevler</h3>
        <div class="card-tools">
          <form method="get" class="d-inline-block">
            <div class="input-group input-group-sm" style="width:280px;">
              <input type="text" name="q" class="form-control" placeholder="Ara (başlık/atanan/konum)" value="<?php echo h($q); ?>">
              <button class="btn btn-outline-secondary btn-sm">Ara</button>
            </div>
          </form>
        </div>
      </div>
      <div class="card-body table-responsive p-0">
        <table class="table table-hover table-sm align-middle mb-0">
          <thead>
            <tr>
              <th><a href="<?php echo h(sort_link('id')); ?>">ID</a></th>
              <th>Başlık</th>
              <th>Konum</th>
              <th><a href="<?php echo h(sort_link('durum')); ?>">Durum</a></th>
              <th>Atanan</th>
              <th>Detay</th>
              <th>Durum Güncelle</th>
            </tr>
          </thead>
          <tbody>
            <?php foreach ($rows as $r): ?>
              <tr>
                <td><?php echo (int)$r['id']; ?></td>
                <td><?php echo h($r['baslik'] ?? ''); ?></td>
                <td><?php echo h(($r['bina_ad']??'-').' / '.($r['kat_ad']??'-').' / '.(($r['birim_ad']??'-')?:'-').' / '.($r['oda_ad']??'-')); ?></td>
                <td><?php echo h($r['durum'] ?? '-'); ?></td>
                <td>
                  <?php if (!empty($r['atanan_ad'])): ?>
                    <?php echo h($r['atanan_ad']); ?>
                    <?php if (!empty($r['atanan_tel'])): ?>
                      <div class="text-muted small"><?php echo h($r['atanan_tel']); ?></div>
                    <?php endif; ?>
                  <?php else: ?>
                    <span class="text-muted">—</span>
                  <?php endif; ?>
                </td>
                <td>
                  <div class="btn-group btn-group-sm">
                    <?php if ((int)($r['sikayet_id'] ?? 0) > 0): ?>
                      <a class="btn btn-warning" href="<?php echo h(app_url('yonetim/sikayet_atama.php?id='.$r['sikayet_id'])); ?>">Görev Ata</a>
                    <?php else: ?>
                      <a class="btn btn-warning" href="<?php echo h(app_url('yonetim/gorev_detay.php?id='.$r['id'])); ?>">Görev Ata</a>
                    <?php endif; ?>
                    <a class="btn btn-info" href="<?php echo h(app_url('yonetim/gorev_detay.php?id='.$r['id'])); ?>">Detay Gör</a>
                  </div>
                </td>
                <td>
                  <form method="post" class="d-inline">
                    <?php echo csrf_field(); ?>
                    <input type="hidden" name="act" value="durum_guncelle">
                    <input type="hidden" name="id" value="<?php echo (int)$r['id']; ?>">
                    <div class="input-group input-group-sm">
                      <select name="durum" class="form-control form-control-sm">
                        <?php foreach ($durumOptions as $d): ?>
                          <option value="<?php echo h($d); ?>" <?php echo selected($r['durum'] ?? '', $d); ?>><?php echo h($d); ?></option>
                        <?php endforeach; ?>
                      </select>
                      <button class="btn btn-primary btn-sm">Kaydet</button>
                    </div>
                  </form>
                </td>
              </tr>
            <?php endforeach; if(!$rows): ?>
              <tr><td colspan="7" class="text-muted">Kayıt yok.</td></tr>
            <?php endif; ?>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <div class="col-12">
    <div class="card card-outline card-primary">
      <div class="card-header"><h3 class="card-title mb-0">Yeni Görev</h3></div>
      <form method="post" autocomplete="off" id="frmYeniGorev">
        <div class="card-body">
          <?php echo csrf_field(); ?>
          <input type="hidden" name="act" value="ekle">

          <div class="row">
            <div class="col-md-5">
              <div class="form-group">
                <label>Başlık</label>
                <input type="text" name="baslik" class="form-control form-control-sm" required>
              </div>
            </div>

            <div class="col-md-7">
              <div class="form-group">
                <label>Atanacak Personel (Arama ile seçiniz)</label>
                <div class="input-group input-group-sm">
                  <input type="text" id="pSearch" class="form-control form-control-sm" placeholder="İsim/e-posta/telefon ile ara">
                  <select id="personel_list" class="form-control form-control-sm" style="max-width:50%;">
                    <option value="">— sonuç yok —</option>
                  </select>
                  <input type="hidden" name="assigned_user_id" id="assigned_user_id">
                </div>
                <small class="text-muted">Arama kutusuna yazdıkça sonuçlar sağdaki listede görünür. Listeden seçince atanır.</small>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-3">
              <div class="form-group">
                <label>Bina</label>
                <select name="bina_id" id="bina_id" class="form-control form-control-sm" required>
                  <option value="">Seçiniz</option>
                  <?php foreach ($binalar as $b): ?>
                    <option value="<?php echo (int)$b['id']; ?>"><?php echo h($b['ad']); ?></option>
                  <?php endforeach; ?>
                </select>
              </div>
            </div>

            <div class="col-md-3">
              <div class="form-group">
                <label>Kat</label>
                <select name="kat_id" id="kat_id" class="form-control form-control-sm" required>
                  <option value="">Önce Bina Seçin</option>
                </select>
              </div>
            </div>

            <div class="col-md-3">
              <div class="form-group">
                <label>Birim</label>
                <select name="birim_id" id="birim_id" class="form-control form-control-sm">
                  <option value="">(Opsiyonel)</option>
                </select>
              </div>
            </div>

            <div class="col-md-3">
              <div class="form-group">
                <label>Oda</label>
                <select name="oda_id" id="oda_id" class="form-control form-control-sm" required>
                  <option value="">Önce kat/birim seçiniz</option>
                </select>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-3">
              <div class="form-group">
                <label>Durum</label>
                <select name="durum" class="form-control form-control-sm">
                  <?php foreach ($durumOptions as $d): ?>
                    <option value="<?php echo h($d); ?>" <?php echo selected('YENI', $d); ?>><?php echo h($d); ?></option>
                  <?php endforeach; ?>
                </select>
              </div>
            </div>
          </div>

        </div>
        <div class="card-footer text-right">
          <button class="btn btn-sm btn-primary">Kaydet</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
(function(){
  // Personel arama (harici uç: ajax_personel.php)
  const URL_PERSONEL = '<?php echo h(app_url('yonetim/ajax_personel.php')); ?>';
  const pSearch = document.getElementById('pSearch');
  const pList   = document.getElementById('personel_list');
  const pHidden = document.getElementById('assigned_user_id');

  if (pSearch && pList && pHidden) {
    let timer = null;
    function doSearch(){
      const q = pSearch.value.trim();
      fetch(URL_PERSONEL + '?q=' + encodeURIComponent(q))
        .then(r=>r.json())
        .then(j=>{
          while(pList.firstChild) pList.removeChild(pList.firstChild);
          if (j.ok && Array.isArray(j.data) && j.data.length>0) {
            j.data.forEach(function(it){
              const opt = document.createElement('option');
              opt.value = it.id;
              opt.textContent = it.ad + (it.telefon ? ' ('+it.telefon+')' : '') + (it.gorevi ? ' — '+it.gorevi : '');
              pList.appendChild(opt);
            });
          } else {
            const opt = document.createElement('option');
            opt.value = '';
            opt.textContent = '— sonuç yok —';
            pList.appendChild(opt);
          }
        })
        .catch(()=>{});
    }
    pSearch.addEventListener('input', function(){
      clearTimeout(timer);
      timer = setTimeout(doSearch, 250);
    });
    // İlk yüklemede boş arama ile liste getir (opsiyonel)
    doSearch();

    pList.addEventListener('change', function(){
      pHidden.value = pList.value || '';
    });
  }

  // Kademeli: Bina -> Kat -> Birim -> Oda (odalar.php tarzı harici uçlar)
  const URL_KATLAR   = '<?php echo h(app_url('yonetim/ajax_katlar.php')); ?>';
  const URL_BIRIMLER = '<?php echo h(app_url('yonetim/ajax_birimler.php')); ?>';
  const URL_ODALAR   = '<?php echo h(app_url('yonetim/ajax_odalar.php')); ?>';

  const selBina  = document.getElementById('bina_id');
  const selKat   = document.getElementById('kat_id');
  const selBirim = document.getElementById('birim_id');
  const selOda   = document.getElementById('oda_id');

  function fillSelect(sel, items, placeholder) {
    while(sel.firstChild) sel.removeChild(sel.firstChild);
    const opt0 = document.createElement('option');
    opt0.value = '';
    opt0.textContent = placeholder || 'Seçiniz';
    sel.appendChild(opt0);
    (items||[]).forEach(function(it){
      const opt = document.createElement('option');
      opt.value = it.id;
      opt.textContent = it.ad;
      sel.appendChild(opt);
    });
  }

  function loadKatlar() {
    const binaId = selBina.value || '';
    fillSelect(selKat, [], 'Önce Bina Seçin');
    fillSelect(selBirim, [], '(Opsiyonel)');
    fillSelect(selOda, [], 'Önce kat/birim seçiniz');
    if (!binaId) return;
    fetch(URL_KATLAR + '?bina_id=' + encodeURIComponent(binaId))
      .then(r=>r.json()).then(j=>{
        fillSelect(selKat, j && j.data ? j.data : [], 'Seçiniz');
      });
  }

  function loadBirimler() {
    const katId = selKat.value || '';
    fillSelect(selBirim, [], '(Opsiyonel)');
    fillSelect(selOda, [], 'Önce kat/birim seçiniz');
    if (!katId) return;
    fetch(URL_BIRIMLER + '?kat_id=' + encodeURIComponent(katId))
      .then(r=>r.json()).then(j=>{
        fillSelect(selBirim, j && j.data ? j.data : [], '(Opsiyonel)');
        loadOdalar(); // birim boş olsa da odaları deneyelim
      });
  }

  function loadOdalar() {
    const binaId  = selBina.value || '';
    const katId   = selKat.value || '';
    const birimId = selBirim.value || '';
    fillSelect(selOda, [], 'Seçiniz');
    if (!binaId || !katId) return;
    const qs = new URLSearchParams({bina_id:binaId, kat_id:katId});
    if (birimId) qs.set('birim_id', birimId);
    fetch(URL_ODALAR + '?' + qs.toString())
      .then(r=>r.json()).then(j=>{
        fillSelect(selOda, j && j.data ? j.data : [], 'Seçiniz');
      });
  }

  if (selBina) selBina.addEventListener('change', loadKatlar);
  if (selKat) selKat.addEventListener('change', loadBirimler);
  if (selBirim) selBirim.addEventListener('change', loadOdalar);
})();
</script>